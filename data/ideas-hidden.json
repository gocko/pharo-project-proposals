[
  {
    "id": "water-quality",
    "title": "Water quality index and internet of things",
    "img": "etienne-water.jpg",
    "supervisors": [
      "Etienne Delay",
      "Oleksandr Zaitsev"
    ],
    "description": "We want to implement a water quality sensor platform for the lake of Gui\u00e8rs in Senegal with Pharo-IoT. The data will be collected by probes. The objective is to develop tools to interact on the fly on how data is collected, aggregated and stored, as the needs of the local population evolve to provide them with co-constructed indicators on water quality.",
    "goal": "a prototype for piloting a data collection station",
    "keywords": [
      "IoT",
      "Water Quality",
      "Stakolders"
    ],
    "size": "Large",
    "difficulty": "Medium",
    "skills": {
      "required": [
        "Pharo"
      ],
      "preferred": [
        "IoT"
      ]
    }
  },
  {
    "id": "front-running-abm",
    "title": "Agent Model with Penality for Front-Running",
    "img": "hernan-abm.jpg",
    "supervisors": [
      "Hernan Morales",
      "Sebastian Jordan"
    ],
    "description": "This project involves creating a virtual marketplace where users can create and trade digital assets using smart contracts, with penalties for front-running or other forms of market manipulation. An algorithm could recognize when market manipulation is occurring, and the developed model will help to detect patterns of abnormal trading activities and impose punishments accordingly, such as account suspensions or financial penalties for offenders engaging in front-running practices. It also could introduce a “reputation score” feature to reward users who are more compliant with the rules and penalize those who break them. CORMAS (A platofrm for COmmon-pool Resources and Multi-Agent Simulations in Pharo) could be used to speed up developement.",
    "goal": "We hope that the student learns to simulate models of economic agents using an appropriate development platform such as CORMAS",
    "keywords": [
      "ABM", "Agent-based Simulation", "DEX", "Front-running", "Smart Contracts", "Trading"
    ],
    "size": "Large",
    "difficulty": "Hard",
    "skills": {
      "required": [ "Pharo" ],
      "preferred": [ "Agent-Based Modeling", "Descentralized Exchanges" ]
    }
  },
  {
    "id": "graph-libraries-integration",
    "title": "Graph libraries Integration and redesign",
    "img": "paris-graph.png",
    "supervisors": [
      "Gordana Rakic",
      "Sebastian Jordan"
    ],
    "description": "There is a graph library in Pharo implemented within PharoAI https://github.com/pharo-ai/graph-algorithms. This library provides a user with several basic graph algorithms. Separately, a graph layouting library  has implemented basic layout algorithms https://github.com/medicka/graPharo. Redesign of these libraries and their consolidation, including adding new layout algorithms  is very significant for faster progress of different Pharo projects, especially PharoAI. Finally, we would like to implement new graph theory algorithms to add them to the library.",
    "goal": "To provide a solid and validated API for those libraries. That API should accept any kind of Object that represents a graph.",
    "keywords": [
      "Graphs Algorithm",
      "Libraries",
      "API"
    ],
    "size": "Large",
    "difficulty": "Medium",
    "skills": {
      "required": [
        "Pharo"
      ],
      "preferred": [
        "Graph theory knowledge"
      ]
    }
  },
  {
    "id": "SYZYGIEAPharoPortOfTidalCycles",
    "title": "SYZYGIE - A Pharo port of Tidal Cycles",
    "img": "domenico.jpg",
    "supervisors": [
      "Nahuel Palumbo"
    ],
    "description": "Live coding, sometimes referred to as on-the-fly programming,  is an increasingly popular creative  technique for performing electronic music and arts  centred on the writing code in public and the use of interactive programming in an improvised way. [TidalCycles](https://tidalcycles.org) is the most popular live coding environment for improvising music with algorithmic patterns. Developed in 2009, it is a domain specific language embedded in Haskell which uses to generate sounds the SuperDirt engine for [SuperCollider](https://supercollider.github.io), communicating with it via the OpenSoundControl protocol; in the recent years several non-Haskell projects has focused on porting TidalCycles features, the two most successful being Vortex (for Python ) and Strudel (for Javascript) Syzygie is a package intended to port to Pharo the mini-notation for sequences used by TidalCycles, that in turn is inspired by Bernard Bel’s [Bol Processor](https://bolprocessor.org).",
    "goal": "The expected outcome is a working port with the main features of TidalCycles mini-notation using PetitParser to parse the creation, manipulation and combination of sequential patterns denoted within strings. The following goal, would be to represent in Pharo TidalCycles’ timespans (also known as arcs), patterns and events in order to store patterns not as data structure but as behaviour.",
    "keywords": [
      "live programming",
      "music"
    ],
    "size": "Medium",
    "difficulty": "Easy",
    "skills": {
      "required": [
        "Pharo",
        "Communication skills"
      ],
      "preferred": [
        "Music theory",
        "In addition of a good knowledge of Pharo, a basic knowledge of Haskell/Python/Javascript is preferred (to be able to refer to the codebase of TidalCycles/Vortex/Strudel"
      ]
    }
  }
]